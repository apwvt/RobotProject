plugins {
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

group 'RobotGame'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

dependencies {
    //Somehow the bluecove people forgot to include a bunch of libraries in
    //their maven distro, so this only works on 32 bit machines
    //implementation "net.sf.bluecove:bluecove:2.1.0"

    //The below scoops the correct version of the library
    //(2.1.1) from libs.
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'no.tornado:tornadofx:1.7.19'
}

javafx {
    version = "13"
    modules = [ 'javafx.controls' ]
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    //Courtesy of @preslavrachev, Medium.com
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}